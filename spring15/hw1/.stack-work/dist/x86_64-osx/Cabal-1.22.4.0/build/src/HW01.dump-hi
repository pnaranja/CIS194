
==================== FINAL INTERFACE ====================
2015-12-10 08:06:23.921803 UTC

interface hw1_JVMlZnu4bb89gOdH7qD1F5:HW01 7102
  interface hash: e564dd8dda8fd25bdf09bed8267d9092
  ABI hash: 866ef15b61840dd668df8c14c522edfd
  export-list hash: 21b71dc1a1688184cee48634ea6c311c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 56b9a755d22be00f2eba50f3628a69c7
  sig of: Nothing
  used TH splices: False
  where
exports:
  HW01.doubleEveryOther
  HW01.dropFirstDigit
  HW01.dropLastDigit
  HW01.firstDigit
  HW01.hanoi
  HW01.lastDigit
  HW01.luhn
  HW01.sumDigits
  HW01.toDigits
  HW01.toRevDigits
  HW01.Move
  HW01.Peg
module dependencies:
package dependencies: base-4.8.1.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:GHC.Generics
import  -/  base-4.8.1.0:Data.Char ba93ec4ca3776f6d9a8c8a6223b2fb26
import  -/  base-4.8.1.0:Data.Foldable 2e5acb797cfda6b3b7fabd7052abe290
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.1.0:GHC.Real 4c3b525ecbd4d62bb287aec36d4c2f0d
import  -/  base-4.8.1.0:GHC.Show b8c65ca3124f92a166c9f05120382442
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  base-4.8.1.0:Text.Read 30509137a501bd56d136aca29a7a35a6
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  integer-gmp-1.0.0.0:GHC.Integer.Type bf9b4d13b1dbe96a83786d2e47d2e8ca
b261a8e6fbbda70d51aee6adc2f23794
  $wfirstDigit :: GHC.Integer.Type.Integer -> GHC.Prim.Int#
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ w :: GHC.Integer.Type.Integer ->
                 case GHC.Show.$w$cshowsPrec1
                        0
                        w
                        (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                 case ww3 of ww { GHC.Types.C# ww1 ->
                 case Data.Char.$wdigitToInt ww1 of ww7 { DEFAULT ->
                 case GHC.Integer.Type.smallInteger
                        ww7 of ww8 { GHC.Integer.Type.S# ww9 ->
                 ww9 } } } }) -}
978bf951af4279bfa364df03a17f3ba2
  type Move = (HW01.Peg, HW01.Peg)
9ea6d70704509ab9f2f9bc704e291fba
  type Peg = GHC.Base.String
a17b2485639d3f0197f91771ccf81e12
  doubleEveryOther ::
    [GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,1*U> -}
68b138cb5ea7b5abae34d428e2c6d511
  dropFirstDigit ::
    GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ x :: GHC.Integer.Type.Integer ->
                 case GHC.Integer.Type.ltInteger#
                        x
                        HW01.dropFirstDigit5 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False
                   -> case GHC.Show.$w$cshowsPrec1
                             0
                             x
                             (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                      case Text.Read.readEither6
                             @ GHC.Integer.Type.Integer
                             (Text.ParserCombinators.ReadP.run
                                @ GHC.Integer.Type.Integer
                                HW01.dropFirstDigit4
                                ww4) of wild2 {
                        [] -> HW01.dropFirstDigit3
                        : x1 ds
                        -> case ds of wild3 {
                             [] -> x1 : ipv ipv1 -> HW01.dropFirstDigit2 } } }
                   GHC.Types.True -> HW01.dropFirstDigit1 } }) -}
aecb91812d31d98733063c0a3d95679e
  dropFirstDigit1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer -1) -}
ae3676919c4ed1bd332c146ca4627643
  dropFirstDigit2 :: GHC.Integer.Type.Integer
  {- Strictness: b -}
3b3e7cd1e5bb887d52000683f7d02582
  dropFirstDigit3 :: GHC.Integer.Type.Integer
  {- Strictness: b -}
b8316a90176883971c1b3b8cb34ddfc9
  dropFirstDigit4 ::
    Text.ParserCombinators.ReadP.P GHC.Integer.Type.Integer
  {- Unfolding: ((GHC.Read.$fReadInteger3
                    GHC.Read.$fReadInteger_$sconvertInt
                    Text.ParserCombinators.ReadPrec.minPrec)
                   `cast`
                 (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                      <GHC.Integer.Type.Integer>_R)
                   @ GHC.Integer.Type.Integer
                   (Text.Read.readEither5 @ GHC.Integer.Type.Integer)) -}
0bfb44efbdd370df1a163c54729f4fed
  dropFirstDigit5 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 10) -}
ab93618064f83870293a3fc0f493cd70
  dropLastDigit ::
    GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: GHC.Integer.Type.Integer ->
                 GHC.Integer.Type.divInteger x HW01.dropFirstDigit5) -}
e005f3fbad5515fecb1ac03fc9d998b7
  firstDigit :: GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,U>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Integer.Type.Integer ->
                 case HW01.$wfirstDigit w of ww { DEFAULT ->
                 GHC.Integer.Type.S# ww }) -}
42a01ff549da1cd7d827fbb5e1044a72
  hanoi ::
    GHC.Integer.Type.Integer
    -> HW01.Peg -> HW01.Peg -> HW01.Peg -> [HW01.Move]
  {- Arity: 4, Strictness: <S,U><L,U><L,U><L,U> -}
dc2398265bc31f48b472cfa62f8e9a02
  lastDigit :: GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: GHC.Integer.Type.Integer ->
                 GHC.Integer.Type.modInteger x HW01.dropFirstDigit5) -}
b5a1abdc53a59db1d8e28bf8408f34eb
  luhn :: GHC.Integer.Type.Integer -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ x :: GHC.Integer.Type.Integer ->
                 case GHC.Integer.Type.eqInteger#
                        (GHC.Integer.Type.modInteger
                           (HW01.sumDigits (HW01.doubleEveryOther (HW01.toRevDigits x)))
                           HW01.dropFirstDigit5)
                        HW01.luhn1 of wild { DEFAULT ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool wild }) -}
ded5d12b914ccc17e8c8cf91f5eb6a6c
  luhn1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 0) -}
35dfbe3b6a2948c723bbb8f7bbe43e6e
  sumDigits :: [GHC.Integer.Type.Integer] -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U> -}
f2cb3f104d3380e73260c03612b6db20
  toDigits :: GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,U> -}
cb86832df912921a64a0aa78b8fcff8a
  toRevDigits ::
    GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

